services:
  backend:
    build:
      context: ./backend
      dockerfile: ../dockerfiles/backend/Dockerfile
    environment:
      PORT: ${PORT}
      MONGODB_URI: ${MONGODB_URI}
      MONGODB_DB_NAME: ${MONGODB_DB_NAME}
    command: sh -c "npm uninstall bcrypt && npm install bcrypt && npm install && node /app/scripts/setup_database_postgres.js && npm run start"
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "8080:3000"
    depends_on:
      - mongodb
      - jingle.db
    networks:
      - jingle_network

  mongodb:
    container_name: mongo-jingle
    image: mongo:latest
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_jingle:/data/db
    networks:
      - jingle_network

  mongo-express:
    image: mongo-express:latest
    networks:
      - jingle_network
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb

  jingle.db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - jingle_network

  adminer:
    image: adminer
    ports:
      - '8083:8080'
    networks:
      - jingle_network

  database:
    image: postgis/postgis:13-master
    # Required when running on platform other than amd64, like Apple M1/M2:
    platform: linux/amd64
#    volumes:
#      - ./data/database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "directus"
      POSTGRES_PASSWORD: "directus"
      POSTGRES_DB: "directus"
    healthcheck:
      test: [ "CMD", "pg_isready", "--host=localhost", "--username=directus" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s
    networks:
      - jingle_network


  directus:
    image: directus/directus:11.3.5
    ports:
      - "8082:8055"
    volumes:
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    depends_on:
      database:
        condition: service_healthy
    networks:
      - jingle_network
    environment:
      SECRET: "replace-with-secure-random-value"

      DB_CLIENT: "pg"
      DB_HOST: "database"
      DB_PORT: "5432"
      DB_DATABASE: "directus"
      DB_USER: "directus"
      DB_PASSWORD: "directus"

      ADMIN_EMAIL: "admin@example.com"
      ADMIN_PASSWORD: "d1r3ctu5"

  frontend:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - '8084:3000'
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev -- --host"

volumes:
  mongodb_jingle:

networks:
  jingle_network:
    driver: bridge
